/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.net.ntp.NTPUDPClient; 
import org.apache.commons.net.ntp.TimeInfo;

/**
 *
 * @author Lokesh
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
         initComponents();
         jButton4.setVisible(false);
      /**  try{
           String TIME_SERVER = "time-a.nist.gov";
       
        NTPUDPClient timeClient = new NTPUDPClient();
        InetAddress inetAddress = InetAddress.getByName(TIME_SERVER);
        TimeInfo timeInfo = timeClient.getTime(inetAddress);
        long systemtime = System.currentTimeMillis();
        timeInfo.computeDetails();
        java.util.Date realdate = new java.util.Date(systemtime + timeInfo.getOffset());
        String real=realdate.toString();
        String hour=real.substring(11,13);
        String minute=real.substring(14,16);
        int h=Integer.parseInt(hour);
        int m=Integer.parseInt(minute);
         if( h < 8 && m <30 || h>17 && m >=0)
        {   
            jButton1.setVisible(false);
           JOptionPane.showMessageDialog(this,"Booking Start At 8:30AM");
           
        }
        else{
            jButton1.setVisible(true);
            //JOptionPane.showMessageDialog(this,"Hello");
        } 
        
        
       
    }   catch (UnknownHostException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    
       
         **/
         try{
               
                Class.forName("java.sql.DriverManager");
                Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://172.26.59.26:3306/hospitals","root","");
                Statement stmt=(Statement) con.createStatement();
                String query="SELECT Name from accounts";
                ResultSet rset=stmt.executeQuery(query);
                while(rset.next()){
                    String Name=rset.getString("Name");
                    jComboBox1.addItem(Name);
                }
                
         }
         catch(Exception e){
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
         
    }
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));
        setForeground(java.awt.Color.lightGray);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("Book Doctor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SrNo", "Dr_name", "Attendance", "TokenNo", "Time"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setText("Address");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("Name");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 153, 153));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Hospital" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("DOB");

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 102));
        jLabel6.setText("Hospital");

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Doctor Appointment");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 102));
        jLabel7.setText("Mobile");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setText("Diseases");

        jComboBox2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(0, 153, 153));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/blue-home-icon.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, 139, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 255));
        jButton2.setText("PAY NOW");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 255));
        jButton3.setText("Book Doctor");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 255));
        jButton4.setText("RECORD");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    String hospital=(String) jComboBox1.getSelectedItem();
    
    
        try{
        Class.forName("java.sql.DriverManager");
        Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://172.26.59.26:3306/"+hospital+"","root","");
        Statement stmt=(Statement) con.createStatement();
        String Disease=(String) jComboBox2.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String AD=(String) model.getValueAt(jTable1.getSelectedRow(), 2);
        int TokenNo=(int) model.getValueAt(jTable1.getSelectedRow(), 3);
        if(TokenNo==80){
            JOptionPane.showMessageDialog(this,"The Bookings Are Closed");
        }
        else if(AD.equals("A")){
            JOptionPane.showMessageDialog(this,"The Doctor Is Absent");
        }
        else{
        int SNo=(int) model.getValueAt(jTable1.getSelectedRow(), 0);
        int SrNo=(int) model.getValueAt(jTable1.getSelectedRow(), 3);
        String Time=(String) model.getValueAt(jTable1.getSelectedRow(), 4);
        String Dr_name=(String) model.getValueAt(jTable1.getSelectedRow(), 1);
        String NTime="";
       
      
        String Name=jTextField1.getText();
        SrNo=SrNo+1;
        //System.out.println(Time);
        SimpleDateFormat df = new SimpleDateFormat("HH:mm");
        java.util.Date d = df.parse(Time); 
        Calendar cal = Calendar.getInstance();
        cal.setTime(d);
        cal.add(Calendar.MINUTE, 5);
        NTime = df.format(cal.getTime());
        //System.out.println(NTime);
        
        String query="INSERT INTO "+Dr_name+"(Name,Time) VALUES('"+Name+"','"+NTime+"');";
        stmt.executeUpdate(query);
        
        String FUpdate="UPDATE "+Disease+" SET TokenNo="+SrNo+" , Time='"+NTime+"' WHERE SrNo="+SNo+";";
        stmt.executeUpdate(FUpdate);
        Date realdate = null;
      /**  try{
           String TIME_SERVER = "time-a.nist.gov";
       
        NTPUDPClient timeClient = new NTPUDPClient();
        InetAddress inetAddress = InetAddress.getByName(TIME_SERVER);
        TimeInfo timeInfo = timeClient.getTime(inetAddress);
        long systemtime = System.currentTimeMillis();
        timeInfo.computeDetails();
         realdate = new Date(systemtime + timeInfo.getOffset());
       
       
        
        
       
    }   catch (UnknownHostException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        **/
        
        JOptionPane.showMessageDialog(this,Name+" ,You Have Booked Dr. "+Dr_name+" \n"+"SrNo = "+SrNo+"\nTime = "+NTime+"\nBooking Time = "+realdate+"\nHospital = "+hospital);
       // }
        ((DefaultTableModel)jTable1.getModel()).setNumRows(0);
        String ST="SELECT * FROM "+Disease+"";
                ResultSet STSET = stmt.executeQuery(ST);
                while(STSET.next()) {   // Move the cursor to the next row, return false if no more row
                    SrNo=STSET.getInt("SrNo");
                    Name=STSET.getString("Dr_name");
                    AD=STSET.getString("AD");
                    TokenNo=STSET.getInt("TokenNo");
                    Time=STSET.getString("Time");
                    Object[] row = {SrNo,Name,AD,TokenNo,Time};
                    DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
                    model1.addRow(row);

                }
        }
    }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }

    
    
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String AD=(String) model.getValueAt(jTable1.getSelectedRow(), 2);
        int TokenNo=(int) model.getValueAt(jTable1.getSelectedRow(), 3);
        if(AD.equals("A")){
            JOptionPane.showMessageDialog(this,"The Doctor Is Absent");
        }
        if(TokenNo==80){
            JOptionPane.showMessageDialog(this,"The Booking Are closed");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            java.awt.Desktop.getDesktop().browse(java.net.URI.create("https://test.instamojo.com/@lokesh1agarwal/l40abe75fa90d4bbe81e0c6c044eba204/"));
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        String hospital=(String)jComboBox1.getSelectedItem();
        if(jComboBox2.getSelectedIndex()!=-1){
            try{
                String Dr_name="";
                Class.forName("java.sql.DriverManager");
                Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://172.26.59.26:3306/"+hospital+"","root","");
                Statement stmt=(Statement) con.createStatement();
                String Disease=(String) jComboBox2.getSelectedItem();
                ((DefaultTableModel)jTable1.getModel()).setNumRows(0);

                String ST="SELECT * FROM "+Disease+"";
                ResultSet STSET = stmt.executeQuery(ST);
                while(STSET.next()) {   // Move the cursor to the next row, return false if no more row
                    int SrNo=STSET.getInt("SrNo");
                    String Name=STSET.getString("Dr_name");
                    String AD=STSET.getString("AD");
                    int TokenNo=STSET.getInt("TokenNo");
                    String Time=STSET.getString("Time");
                    Object[] row = {SrNo,Name,AD,TokenNo,Time};
                    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                    model.addRow(row);

                }

            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this,e.getMessage());
            }

        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

        jComboBox2.removeAllItems();

        try{
            String hospital=(String)jComboBox1.getSelectedItem();
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://172.26.59.26:3306/"+hospital+"","root","");
            Statement stmt=(Statement) con.createStatement();
            String query="Select * from disease";
            ResultSet rset=stmt.executeQuery(query);
            // jComboBox2.removeAllItems();
            while(rset.next()){
                String Name=rset.getString("Name");

                jComboBox2.addItem(Name);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
    String hospital=(String) jComboBox1.getSelectedItem(),date="";
    
    
        try{
        Class.forName("java.sql.DriverManager");
        Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://172.26.59.26:3306/"+hospital+"","root","");
        Statement stmt=(Statement) con.createStatement();
        String Disease=(String) jComboBox2.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String AD=(String) model.getValueAt(jTable1.getSelectedRow(), 2);
        int TokenNo=(int) model.getValueAt(jTable1.getSelectedRow(), 3);
        if(TokenNo==80){
            JOptionPane.showMessageDialog(this,"The Bookings Are Closed");
        }
        else if(AD.equals("A")){
            JOptionPane.showMessageDialog(this,"The Doctor Is Absent");
        }
        else{
        int SNo=(int) model.getValueAt(jTable1.getSelectedRow(), 0);
        int SrNo=(int) model.getValueAt(jTable1.getSelectedRow(), 3);
        String Time=(String) model.getValueAt(jTable1.getSelectedRow(), 4);
        String Dr_name=(String) model.getValueAt(jTable1.getSelectedRow(), 1);
        String NTime="";
       
      
        String Name=jTextField1.getText();
        SrNo=SrNo+1;
        //System.out.println(Time);
        SimpleDateFormat df = new SimpleDateFormat("HH:mm");
        java.util.Date d = df.parse(Time); 
        Calendar cal = Calendar.getInstance();
        cal.setTime(d);
        cal.add(Calendar.MINUTE, 5);
        NTime = df.format(cal.getTime());
        //System.out.println(NTime);
        
        String query="INSERT INTO "+Dr_name+"(Name,Time) VALUES('"+Name+"','"+NTime+"');";
        stmt.executeUpdate(query);
        
        String FUpdate="UPDATE "+Disease+" SET TokenNo="+SrNo+" , Time='"+NTime+"' WHERE SrNo="+SNo+";";
        stmt.executeUpdate(FUpdate);
        Date realdate = null;
      /**  try{
           String TIME_SERVER = "time-a.nist.gov";
       
        NTPUDPClient timeClient = new NTPUDPClient();
        InetAddress inetAddress = InetAddress.getByName(TIME_SERVER);
        TimeInfo timeInfo = timeClient.getTime(inetAddress);
        long systemtime = System.currentTimeMillis();
        timeInfo.computeDetails();
         realdate = new Date(systemtime + timeInfo.getOffset());
       
       
        
        
       
    }   catch (UnknownHostException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        **/
        
        JOptionPane.showMessageDialog(this,Name+" ,You Have Booked Dr. "+Dr_name+" \n"+"SrNo = "+SrNo+"\nTime = "+NTime+"\nBooking Time = "+realdate+"\nHospital = "+hospital);
       // }
        
        ((DefaultTableModel)jTable1.getModel()).setNumRows(0);
        String ST="SELECT * FROM "+Disease+"";
                ResultSet STSET = stmt.executeQuery(ST);
                while(STSET.next()) {   // Move the cursor to the next row, return false if no more row
                    SrNo=STSET.getInt("SrNo");
                    Name=STSET.getString("Dr_name");
                    AD=STSET.getString("AD");
                    TokenNo=STSET.getInt("TokenNo");
                    Time=STSET.getString("Time");
                    Object[] row = {SrNo,Name,AD,TokenNo,Time};
                    DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
                    model1.addRow(row);

                }
                Name=jTextField1.getText();
                con=(Connection) DriverManager.getConnection("jdbc:mysql://172.26.59.26:3306/users","root","");
                String U_up="SELECT CURDATE()";
                String date1="";
                ResultSet rset=stmt.executeQuery(U_up);
                while(rset.next()){
                    date1=rset.getString("CURDATE()");
                }
        stmt=(Statement) con.createStatement();
        U_up="Insert into "+Name+" values('"+Name+"','"+Disease+"','"+Dr_name+"','"+hospital+"','"+date1+"')";
        stmt.executeUpdate(U_up);
        }
    }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }

    
    

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        NewJFrame9 ob=new NewJFrame9();
        ob.setVisible(true);
        
        
       String Name=jTextField1.getText();
        try{
                Class.forName("java.sql.DriverManager");
                Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://172.26.59.26:3306/users","root","");
                Statement stmt=(Statement) con.createStatement();
                ((DefaultTableModel)jTable1.getModel()).setNumRows(0);

                String ST="SELECT * FROM "+Name+"";
                ResultSet STSET = stmt.executeQuery(ST);
                while(STSET.next()) {   // Move the cursor to the next row, return false if no more row
                    String Disease=STSET.getString("Disease");
                    String Dr_name=STSET.getString("Dr_name");
                    String Hospital=STSET.getString("Hospital");
                    String Date=STSET.getString("Date");
                    Object[] row = {Disease,Dr_name,Hospital,Date};
                    DefaultTableModel model = (DefaultTableModel)ob.jTable1.getModel();
                    model.addRow(row);

                }

            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
new NewJFrame5().setVisible(true);
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    
    // @param args the command line arguments
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public static javax.swing.JButton jButton3;
    public static javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    public javax.swing.JComboBox jComboBox1;
    public static javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField2;
    public static javax.swing.JTextField jTextField3;
    public static javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    
}
